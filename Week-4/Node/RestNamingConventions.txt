REST API:

Representational State Transfer

-The URI Structure of the API should be meaningful and predictable
-API are resource centric
-Operations are represented via HTTP verbs on Resources

Document:--

A document resource is a singular concept that is akin to an object instance or database record.

Example:  http://api.soccer.restapi.org/leagues/seattle/teams/trebuchet

Collection:--

A collection resource is a server-managed directory of resources. Clients may propose new resources to be added to a collection.
However, it is up to the collection to choose to create a new resource, or not.

Example: http://api.soccer.restapi.org/leagues/seattle/teams

Store:--

A store is a client-managed resource repository. A store resource lets an API client put resources in, get them back out,
and decide when to delete them. On their own, stores do not create new resources; therefore a store never generates new URIs. 
Instead, each stored resource has a URI that was chosen by a client when it was initially put into the store.

Example: PUT /users/1234/favorites/alonso

Controller:--

A controller resource models a procedural concept. Controller resources are like executable functions, with parameters and return values;
inputs and outputs.Like a traditional web applicationâ€™s use of HTML forms, a REST API relies on controller resources to perform application-specific
actions that cannot be logically mapped to one of the standard methods (create, retrieve, update, and delete, also known as CRUD).
Controller names typically appear as the last segment in a URI path, with no child resources to follow them in the hierarchy.

Example: POST /alerts/245743/resend